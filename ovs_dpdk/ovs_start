#!/bin/bash

if [[ $1 == "-h" ]]
then
echo "-m | --dpdk-socket-mem:"
echo "	sockets memory to pre-allocate for hugepages"
echo "	e.g. 4096,0, to allocate 4G from 1st socket, 0 from the 2nd"
echo "-c | --dpdk-lcore-mask:"
echo "	CPU cores on which dpdk lcore threads should be spawned"
echo "	expects hex, e.g. 55, to specify CPUS 0,2,4,6"
echo "-p | --dpdk-pmd-mask:"
echo "	CPU cores on which PMD threads should be spawned,"
echo "	expects hex, e.g. 55"
exit 0
fi

set -x
source vars.sh

while [[ $# -gt 1 ]]
do
key="$1"
case $key in
-m|--dpdk-socket-mem)
    DPDK_SOCKET_MEM="$2"
    shift 
    ;;

-c|--dpdk-lcore-mask)
    DPDK_LCORE_MASK="$2"
    shift 
    ;;

-p|--dpdk-pmd-mask)
    DPDK_PMD_MASK="$2"
    shift 
    ;;
*)
    ;;

esac
shift 
done

sudo mkdir -p $OVS_RUN_DIR/$OVS_VHOST_SUBDIR 

# specify OVS to initialize and support DPDK ports 
sudo $OVS_DIR/utilities/ovs-vsctl --db=unix:$OVSDB_SOCK --no-wait \
	set Open_vSwitch . other_config:dpdk-init=true 

# specify OVS to initialize and support DPDK ports 
sudo $OVS_DIR/utilities/ovs-vsctl --db=unix:$OVSDB_SOCK --no-wait \
	set Open_vSwitch . other_config:dpdk-hugepage-dir=/dev/hugepages

# set path to vhost_user unix socket
sudo $OVS_DIR/utilities/ovs-vsctl --db=unix:$OVSDB_SOCK --no-wait \
	set Open_vSwitch . other_config:vhost-sock-dir="$OVS_VHOST_SUBDIR"

# set memory
if [[ -v DPDK_SOCKET_MEM ]]
then
sudo $OVS_DIR/utilities/ovs-vsctl --db=unix:$OVSDB_SOCK --no-wait \
	set Open_vSwitch . other_config:dpdk-socket-mem=$DPDK_SOCKET_MEM
fi

# set DPDK lcore threads CPU mask
if [[ -v DPDK_LCORE_MASK ]]
then
sudo $OVS_DIR/utilities/ovs-vsctl --db=unix:$OVSDB_SOCK --no-wait \
	set Open_vSwitch . other_config:dpdk-lcore-mask="0x$DPDK_LCORE_MASK"
fi

# set PMD threads CPU mask
if [[ -v DPDK_PMD_MASK ]]
then
sudo $OVS_DIR/utilities/ovs-vsctl --db=unix:$OVSDB_SOCK --no-wait \
	set Open_vSwitch . other_config:pmd-cpu-mask=$DPDK_PMD_MASK
fi

# start vswitchd
sudo $OVS_DIR/vswitchd/ovs-vswitchd unix:$OVSDB_SOCK --pidfile --detach
